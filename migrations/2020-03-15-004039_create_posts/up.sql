-- Your SQL goes here

CREATE TABLE posts (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    title VARCHAR(500) NOT NULL,
    content MEDIUMTEXT NOT NULL, 
    authorid INT UNSIGNED NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    modified_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    nb_votes INT UNSIGNED NOT NULL DEFAULT 0,
    PRIMARY KEY (id),
    FOREIGN KEY (authorid) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE tags (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    description VARCHAR(100) NOT NULL,
    PRIMARY KEY  (id)
);

CREATE TABLE posts_tags (
    post_id INT UNSIGNED NOT NULL,
    tag_id INT UNSIGNED NOT NULL,
    PRIMARY KEY  (post_id,tag_id),
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
);

CREATE TABLE comments (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    post_id INT UNSIGNED NOT NULL,
    content MEDIUMTEXT NOT NULL, 
    authorid INT UNSIGNED NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    modified_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    nb_votes INT UNSIGNED NOT NULL DEFAULT 0,
    parent_id INT UNSIGNED DEFAULT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (authorid) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY (parent_id) REFERENCES comments(id) ON DELETE CASCADE
);

CREATE TABLE votes_posts (
    post_id INT UNSIGNED NOT NULL,
    vote_authorid INT UNSIGNED NOT NULL,
    voted_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    vote_value BOOLEAN NOT NULL,
    PRIMARY KEY (post_id, vote_authorid),
    FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY (vote_authorid) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE votes_comments (
    comment_id INT UNSIGNED NOT NULL,
    vote_authorid INT UNSIGNED NOT NULL,
    voted_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    vote_value BOOLEAN NOT NULL,
    PRIMARY KEY (comment_id, vote_authorid),
    FOREIGN KEY (comment_id) REFERENCES comments(id) ON DELETE CASCADE,
    FOREIGN KEY (vote_authorid) REFERENCES users(id) ON DELETE CASCADE
);