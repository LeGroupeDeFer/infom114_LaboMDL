kind: pipeline
type: docker
name: default

steps:
- name: backend
  image: rustlang/rust:nightly
  volumes:
    - name: cargo-compilation-cache
      path: /drone/src/target
    - name: cargo-registry-cache
      path: /usr/local/cargo/registry
  commands:
  - apt update && apt install -y libssl-dev pkg-config cmake zlib1g-dev
  - cargo build --verbose --release --all-targets --all-features
  - cargo test --verbose --release --all-targets --all-features
  - cargo install --root /usr/local/cargo/registry cargo-tarpaulin
  - PATH=/usr/local/cargo/registry/bin:$PATH cargo-tarpaulin tarpaulin --out Xml
- name: frontend
  image: node:alpine3.10
  volumes:
    - name: node-cache
      path: /drone/src/node_modules
  commands:
  - npm i
  - npm run-script build
  - npm run-script test
- name: coverage
  image: alpine:latest
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  commands:
  - apk add --no-cache --update git bash curl
  - wget https://codecov.io/bash -O codecov.sh && chmod +x codecov.sh
  - bash codecov.sh
- name: pre-release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
      - sha512
    files:
      - target/release/hello-rocket
    prerelease: true
    note: CHANGELOG.md
    title: RELEASE.md
  when:
    status:
      - success
    event: tag

volumes:
  - name: cargo-registry-cache
    host:
      path: /tmp/cargo/registry-cache
  - name: cargo-compilation-cache
    host:
      path: /tmp/cargo/compilation-cache
  - name: node-cache
    host:
      path: /tmp/node-cache