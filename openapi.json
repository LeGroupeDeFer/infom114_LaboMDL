{
    "openapi": "3.0.1",
    "info": {
        "title": "UNAnimity",
        "version": "0.0.3"
    },
    "servers": [{
        "url": "https://unanimity.findot.me/"
    }],
    "tags": [{
        "name": "auth",
        "description": "Everything that is related to authentication"
    },
    {
        "name": "admin",
        "description": "Everything related to administration"
    }],
    "paths": {
        "/register": {
            "get": {
                "tags": ["auth"],
                "description": "Fetch the form to create a new user on the platform",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": ["auth"],
                "description": "Send user information and login credentials for a new account on the application",
                "requestBody": {
                    "content": {
                        "json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInformation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request : the given format is incorrect",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "json format is required"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity : missing parameter",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "property 'email' is missing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register/check_email": {
            "post": {
                "tags": ["auth"],
                "description": "Check if email given is already used on the platform",
                "requestBody": {
                    "content": {
                        "json": {
                            "schema": {
                                "type": "object",
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "The email we want to check the use of"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request : the given format is incorrect",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "json format is required"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "NOK",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "This email is already linked to an account."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity : missing parameter",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "property 'email' is missing"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/flagged_post": {
            "get": {
                "security": [
                {
                    "AdminAuth": []
                }
                ],
                "tags": [
                "admin"
                ],
                "description": "Fetch all the reported posts and comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {"TODO":"Todo"}
                    }
                }
            }
        },
        "/api/v1/admin/trending_post": {
            "get": {
                "security": [
                {
                    "AdminAuth": []
                }
                ],
                "tags": [
                "admin"
                ],
                "description": "Fetch the most active posts and comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {"TODO":"Todo"}
                    }
                }
            }
        },    
        "/api/v1/admin/hide_ressource": {
            "post": {
                "security": [
                {
                    "AdminAuth": []
                }
                ],
                "tags": [
                "admin"
                ],
                "description": "Hide (or unhide - if already hide) a post or a comment",
                "requestBody": {
                    "content": {
                        "json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ressourceId": {
                                        "type": "string",
                                        "description": "The id of the post or the comment we want to hide or unhide"
                                    },
                                    "isComment": {
                                        "type": "boolean",
                                        "description": "indicate whether the ressource is a post (false) or a comment (true)"
                                    }
                                }
                            }
                        }
                    },
                "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "json": {
                                "schema": {
                                "$ref": "#/components/schemas/Info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request : the given format is incorrect",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "json format is required"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity : entity does not exist",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "property 'ressourceId' does not exist"
                                }
                            }
                        }
                    }
                }   
            }
        },
        "/api/v1/admin/edit_post": {
            "post": {
                "security": [
                {
                    "AdminAuth": []
                }
                ],
                "tags": [
                "admin"
                ],
                "description": "Edit a post or a comment",
                "requestBody": {
                    "content": {
                        "json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ressourceId": {
                                        "type": "string",
                                        "description": "The id of the post/comment to edit"
                                    },
                                    "isComment": {
                                        "type": "boolean",
                                        "description": "indicate whether the ressource is a post (false) or a comment (true)"
                                    }
                                }
                            }
                        }
                    },
                "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "json": {
                                "schema": {
                                "$ref": "#/components/schemas/Info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request : the given format is incorrect",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "json format is required"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity : entity does not exist",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "property 'ressourceId' does not exist"
                                }
                            }
                        }
                    }
                }   
            }
        },
        "/api/v1/admin/close_discussion": {
            "post": {
                "security": [
                {
                    "AdminAuth": []
                }
                ],
                "tags": [
                "admin"
                ],
                "description": "Mark the discussion of a post as closed",
                "requestBody": {
                    "content": {
                        "json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "postId": {
                                        "type": "string",
                                        "description": "The id of the post the discussion is associated with"
                                    }
                                }
                            }
                        }
                    },
                "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "json": {
                                "schema": {
                                "$ref": "#/components/schemas/Info"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request : the given format is incorrect",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "json format is required"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity : entity does not exist",
                        "content": {
                            "json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                },
                                "example": {
                                    "success": false,
                                    "message": "property 'postId' does not exist"
                                }
                            }
                        }
                    }
                }   
            }
        },
        "/login": {
            "get": {
                "tags": ["auth"],
                "description": "Fetch the login page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": ["auth"],
                "description": "Send login credentials for authentication",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": ["password", "username"],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "The username credential"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The password credential"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            }
        },
        "/recovery": {
            "get": {
                "tags": ["auth"],
                "description": "Fetch the form to send a mail with a link to reset a user password when it's forgotten",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": ["auth"],
                "description": "Send email to get a link to be able to reset the password",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "description": "The user email. Note that the email must correspond to a valid user"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            }
        },
        "/password_reset/{hash}": {
            "get": {
                "tags": ["auth"],
                "description": "Fetch the form to reset a user password",
                "parameters": [{
                    "name": "hash",
                    "in": "path",
                    "description": "The time limited hash generated for a password reset of a user",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            },
            "post": {
                "tags": ["auth"],
                "description": "Send the form to reset a user password",
                "parameters": [{
                    "name": "hash",
                    "in": "path",
                    "description": "The time limited hash generated for a password reset of a user",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": ["password"],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "description": "The new password for the user"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "security": [{
                    "UserAuth": []
                }],
                "tags": ["auth"],
                "description": "Logout the connected user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "UserAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "user_id"
            },
            "AdminAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "admin_id"
            }
        },
        "schemas": {
            "Info": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "UserInformation": {
                "type": "object",
                "required": ["email", "firstname", "lastname", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address for the user to be contacted"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password that the user will use to log on the platform"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "The first name of the user"
                    },
                    "lastname": {
                        "type": "string",
                        "description": "The last name of the user"
                    },
                    "street": {
                        "type": "string",
                        "description": "The street name of the address of the user"
                    },
                    "number": {
                        "type": "integer",
                        "description": "The house number of the address of the user",
                        "format": "int32"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city where the user lives in"
                    },
                    "zipcode": {
                        "type": "integer",
                        "description": "The zip code of the address of the user",
                        "format": "int32"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country where the user lives in"
                    },
                    "phone": {
                        "type": "string",
                        "description": "The phone number of the user"
                    }
                }
            }
        }
    }
}